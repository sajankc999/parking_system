default_language_version:
  python: python3.10
repos:
  # - repo: https://github.com/psf/black
  #   rev: 22.3.0
  #   hooks:
  #     - id: black
  #       language_version: python3.10

  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.2.0
    hooks:
      - id: trailing-whitespace
        exclude: ^templates/templated_email/compiled/
        exclude_types: [svg]
      - id: end-of-file-fixer
        exclude: ^templates/templated_email/compiled/
        exclude_types: [svg]
      - id: check-added-large-files # prevents giant files from being committed.
      - id: check-case-conflict # checks for files that would conflict in case-insensitive filesystems.
      - id: check-merge-conflict # checks for files that contain merge conflict strings.
      - id: check-yaml # checks yaml files for parseable syntax.
      - id: detect-private-key # detects the presence of private keys.
      - id: fix-byte-order-marker # removes utf-8 byte order marker.
      - id: mixed-line-ending # replaces or checks mixed line ending.

  - repo: https://github.com/pycqa/bandit
    rev: 1.7.4
    hooks:
      - id: bandit
        args: ["-iii", "-ll"]

  # - repo: https://github.com/pycqa/flake8
  #   rev: 3.9.2
  #   hooks:
  #     - id: flake8
  #       exclude: migrations|apps

  - repo: https://github.com/asottile/seed-isort-config
    rev: v2.2.0
    hooks:
      - id: seed-isort-config

  - repo: https://github.com/pre-commit/mirrors-isort
    rev: v5.10.1
    hooks:
      - id: isort
        args: ["--profile", "black"]

  # - repo: https://github.com/pycqa/pydocstyle
  #   rev: 6.1.1
  #   hooks:
  #     - id: pydocstyle
  #       exclude: tests/

  - repo: https://github.com/pre-commit/mirrors-autopep8
    rev: "v2.0.4"
    hooks:
      - id: autopep8

  - repo: https://github.com/python-poetry/poetry
    rev: "1.4.1"
    hooks:
      - id: poetry-export
        args:
          [
            "-f",
            "requirements.txt",
            "-o",
            "requirements.txt",
            "--without-hashes",
          ]

  - repo: local
    hooks:
      - id: migrations-check
        language: system
        name: Check for uncreated migrations.
        entry: sh -c "./manage.py makemigrations --check --dry-run"
        files: "models\\.py$"
        stages: [commit]

  # - repo: local
  #   hooks:
  #     - id: build-docs-sphinx
  #       language: system
  #       name: Build documentation using sphinx
  #       pass_filenames: false
  #       entry: sh -c "cd docs && make html && cd .."
